MinPath(u[,], r[,], n)
	C[n,n]
	S[n,n]
	
	C[n,n] = 0
	S[n,n] = '-'
	for j=n-1 downto 0						//O(n)
		C[n,j] = r[n,j]+C[n,j+1]
		S[n,j] = '>'
	for i=n-1 downto 0						//O(n)
		C[i,n] = r[i,n]+C[i+1,n]
		S[i,n] = '^'

	for j=n-1 downto 0
		for i=n-1 downto 0					//O(n^2)
			if(u[i,j] + C[i+1,j] > r[i,j] + C[i,j+1])
				C[i,j] = r[i,j] + C[i,j+1]
				S[i,j] = '>'
			else
				C[i,j] = u[i,j] + C[i+1,j]
				S[i,j] = '^'
	return C[1,1], S

//complessita' O(n^2)


PrintSol(S)									//O(n)
	i = j = 1;
	while( S[i,j!='-'] )
		if(S[i,j] = '>')
			print(destra)
			j = j+1
		else
			print(alto)
			i = i+1
	print(arrivato)


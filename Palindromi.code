C[j] = MAX {1
		    2			se j+1 <= n e X[j] = X[j+1]
		    C[j+1]+2	se j+1+C[j+1] <= n e X[j] = X[j+1+C[j+1]] }

Palindromi(X[], n)
	maxtot = -inf
	partenza = -1
	C[n]
	for j=n downto 1
		C[j] = 1
		if j<n and X[j] = X[j+1]
			C[j] = 2
		if j+1+C[j+1] <= n and X[j] = X[j+1+C[j+1]]
			C[j] = C[j+1]+2

		if C[j] > maxtot
			maxtot = C[j]
			partenza = j
	return maxtot, partenza

//Compessità: O(n)

Stampa(X[], maxtot, partenza)
	for i=partenza to partenza+maxtot
		print(X[i])

//Compessità della stampa: O(n)

